# -*- coding: utf-8 -*-
"""add4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eILDTMUYayA-5_lpNCiF2K_qj42K15BT
"""



# %%


import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.feature_extraction.text import TfidfVectorizer
from gtts import gTTS
import gradio as gr
import speech_recognition as sr
import os

# Load and train model
df = pd.read_csv("kamaraj_college_faq.csv")
df.dropna(inplace=True)

le = LabelEncoder()
df["Answer_Label"] = le.fit_transform(df["Answer"])
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(df["Question"])
y = df["Answer_Label"]

model = LogisticRegression()
model.fit(X, y)

# Convert audio to text using speech_recognition
def transcribe_audio(audio_path):
    recognizer = sr.Recognizer()
    with sr.AudioFile(audio_path) as source:
        audio = recognizer.record(source)
    try:
        return recognizer.recognize_google(audio)
    except:
        return "Sorry, could not understand the audio."

# Chatbot logic
def chatbot(audio=None, text=None):
    if audio:
        user_input = transcribe_audio(audio)
    elif text:
        user_input = text
    else:
        return "‚ùó Please provide a question.", None

    vector = vectorizer.transform([user_input])
    prediction = model.predict(vector)[0]
    answer = le.inverse_transform([prediction])[0]

    mp3_file = "answer.mp3"
    tts = gTTS(answer)
    tts.save(mp3_file)

    return f"üß† You asked: {user_input}\n‚úÖ Answer: {answer}", mp3_file

# Gradio interface
iface = gr.Interface(
    fn=chatbot,
    inputs=[
        gr.Audio(sources=["microphone"], type="filepath", label="üé§ Ask your question"),
        gr.Textbox(label="Or type your question", placeholder="Type question here...")
    ],
    outputs=[
        gr.Text(label="Response"),
        gr.Audio(label="Download Spoken Answer", type="filepath")
    ],
    title="üéì Kamaraj College FAQ Chatbot",
    description="Ask a question by voice or text and get a spoken answer back.",
)

iface.launch()
